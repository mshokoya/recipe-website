{"ast":null,"code":"import { useMemo } from 'react';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport getConfig from 'next/config';\nlet apolloClient;\nconst {\n  publicRuntimeConfig\n} = getConfig();\nconst {\n  graphcms: {\n    GRAPHCMSID,\n    GRAPHCMSURL,\n    BRANCH\n  }\n} = publicRuntimeConfig;\n\nfunction createApolloClient() {\n  return new ApolloClient({\n    ssrMode: true,\n    link: new HttpLink({\n      uri: `${GRAPHCMSURL}/${GRAPHCMSID}/${BRANCH}`,\n      // uri: 'https://api.graph.cool/simple/v1/cixmkt2ul01q00122mksg82pn',\n      credentials: 'same-origin'\n    }),\n    cache: new InMemoryCache()\n  });\n}\n\nexport function initializeApollo(initialState = null) {\n  var _apolloClient2;\n\n  const _apolloClient = (_apolloClient2 = apolloClient) !== null && _apolloClient2 !== void 0 ? _apolloClient2 : createApolloClient();\n\n  if (initialState) {\n    _apolloClient.cache.restore(initialState);\n  }\n\n  if (true) return _apolloClient;\n  if (!apolloClient) apolloClient = _apolloClient;\n  return _apolloClient;\n}\nexport function useApollo(initialState) {\n  const store = useMemo(() => initializeApollo(initialState), [initialState]);\n  return store;\n}","map":{"version":3,"sources":["/Users/michaelshokoya/Documents/code/node/recipe-website/src/components/WithApolloClient/index.tsx"],"names":["useMemo","ApolloClient","InMemoryCache","HttpLink","getConfig","apolloClient","publicRuntimeConfig","graphcms","GRAPHCMSID","GRAPHCMSURL","BRANCH","createApolloClient","ssrMode","link","uri","credentials","cache","initializeApollo","initialState","_apolloClient","restore","useApollo","store"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,IAAIC,YAAJ;AACA,MAAM;AAACC,EAAAA;AAAD,IAAwBF,SAAS,EAAvC;AACA,MAAM;AACJG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UADQ;AAERC,IAAAA,WAFQ;AAGRC,IAAAA;AAHQ;AADN,IAMFJ,mBANJ;;AAQA,SAASK,kBAAT,GAA8B;AAC5B,SAAO,IAAIV,YAAJ,CAAiB;AACtBW,IAAAA,OAAO,MADe;AAEtBC,IAAAA,IAAI,EAAE,IAAIV,QAAJ,CAAa;AACjBW,MAAAA,GAAG,EAAG,GAAEL,WAAY,IAAGD,UAAW,IAAGE,MAAO,EAD3B;AAEjB;AACAK,MAAAA,WAAW,EAAE;AAHI,KAAb,CAFgB;AAOtBC,IAAAA,KAAK,EAAE,IAAId,aAAJ;AAPe,GAAjB,CAAP;AASD;;AAED,OAAO,SAASe,gBAAT,CAA0BC,YAAY,GAAG,IAAzC,EAA+C;AAAA;;AACpD,QAAMC,aAAa,qBAAGd,YAAH,2DAAmBM,kBAAkB,EAAxD;;AAEA,MAAIO,YAAJ,EAAkB;AAChBC,IAAAA,aAAa,CAACH,KAAd,CAAoBI,OAApB,CAA4BF,YAA5B;AACD;;AAED,YAAmC,OAAOC,aAAP;AAEnC,MAAI,CAACd,YAAL,EAAmBA,YAAY,GAAGc,aAAf;AAEnB,SAAOA,aAAP;AACD;AAED,OAAO,SAASE,SAAT,CAAmBH,YAAnB,EAAiC;AACtC,QAAMI,KAAK,GAAGtB,OAAO,CAAC,MAAMiB,gBAAgB,CAACC,YAAD,CAAvB,EAAuC,CAACA,YAAD,CAAvC,CAArB;AACA,SAAOI,KAAP;AACD","sourcesContent":["import { useMemo } from 'react'\nimport { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\nimport fetch from 'isomorphic-unfetch';\nimport getConfig from 'next/config';\n\nlet apolloClient;\nconst {publicRuntimeConfig} = getConfig();\nconst {\n  graphcms: {\n    GRAPHCMSID,\n    GRAPHCMSURL,\n    BRANCH\n  }\n} = publicRuntimeConfig;\n\nfunction createApolloClient() {\n  return new ApolloClient({\n    ssrMode: typeof window === 'undefined',\n    link: new HttpLink({\n      uri: `${GRAPHCMSURL}/${GRAPHCMSID}/${BRANCH}`,\n      // uri: 'https://api.graph.cool/simple/v1/cixmkt2ul01q00122mksg82pn',\n      credentials: 'same-origin',\n    }),\n    cache: new InMemoryCache(),\n  })\n}\n\nexport function initializeApollo(initialState = null) {\n  const _apolloClient = apolloClient ?? createApolloClient()\n\n  if (initialState) {\n    _apolloClient.cache.restore(initialState)\n  }\n\n  if (typeof window === 'undefined') return _apolloClient\n\n  if (!apolloClient) apolloClient = _apolloClient\n\n  return _apolloClient\n}\n\nexport function useApollo(initialState) {\n  const store = useMemo(() => initializeApollo(initialState), [initialState])\n  return store\n}"]},"metadata":{},"sourceType":"module"}