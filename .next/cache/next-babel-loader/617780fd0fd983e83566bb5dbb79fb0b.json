{"ast":null,"code":"var _jsxFileName = \"/Users/michaelshokoya/Documents/code/node/recipe-website/src/pages/recipe/[id]/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { recipeGraphQL } from '../../../graphql/queries/recipe';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Loading } from '../../../components/Loading';\nimport { Error } from '../../../components/Error';\nimport { MainLayout } from '../../../components/MainLayout';\n\nconst Recipe = ({\n  id\n}) => {\n  const {\n    loading,\n    data,\n    error\n  } = useQuery(recipeGraphQL, {\n    variables: {\n      where: {\n        id\n      }\n    }\n  });\n\n  if (loading) {\n    return __jsx(MainLayout, {\n      title: \"Recipe loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, __jsx(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (error) {\n    console.log(id);\n    return __jsx(MainLayout, {\n      title: \"Recipe loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, __jsx(Error, {\n      errorText: `${error}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  }, \"My Recipe\");\n};\n\nRecipe.getInitialProps = ({\n  query\n}) => {\n  const {\n    id\n  } = query;\n  return {\n    id\n  };\n};\n\nexport default Recipe;","map":{"version":3,"sources":["/Users/michaelshokoya/Documents/code/node/recipe-website/src/pages/recipe/[id]/index.tsx"],"names":["recipeGraphQL","useQuery","Loading","Error","MainLayout","Recipe","id","loading","data","error","variables","where","console","log","getInitialProps","query"],"mappings":";;;AAAA,SAAQA,aAAR,QAA4B,iCAA5B;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAAQC,OAAR,QAAsB,6BAAtB;AACA,SAAQC,KAAR,QAAoB,2BAApB;AACA,SAAQC,UAAR,QAAyB,gCAAzB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAwB;AACrC,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,MAAyBR,QAAQ,CAACD,aAAD,EAAgB;AACrDU,IAAAA,SAAS,EAAE;AAACC,MAAAA,KAAK,EAAE;AAACL,QAAAA;AAAD;AAAR;AAD0C,GAAhB,CAAvC;;AAIA,MAAIC,OAAJ,EAAa;AACX,WACE,MAAC,UAAD;AAAY,MAAA,KAAK,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAED,MAAIE,KAAJ,EAAU;AACRG,IAAAA,OAAO,CAACC,GAAR,CAAYP,EAAZ;AACA,WACE,MAAC,UAAD;AAAY,MAAA,KAAK,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,SAAS,EAAG,GAAEG,KAAM,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AACD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD,CAtBD;;AAwBAJ,MAAM,CAACS,eAAP,GAAyB,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACpC,QAAM;AAACT,IAAAA;AAAD,MAAOS,KAAb;AAEA,SAAO;AAACT,IAAAA;AAAD,GAAP;AACD,CAJD;;AAMA,eAAeD,MAAf","sourcesContent":["import {recipeGraphQL} from '../../../graphql/queries/recipe';\nimport {useQuery} from '@apollo/react-hooks';\nimport {Loading} from '../../../components/Loading';\nimport {Error} from '../../../components/Error';\nimport {MainLayout} from '../../../components/MainLayout';\n\nconst Recipe = ({id}: {id: string}) => {\n  const {loading, data, error} = useQuery(recipeGraphQL, {\n    variables: {where: {id}}\n  });\n\n  if (loading) {\n    return (\n      <MainLayout title='Recipe loading'>\n        <Loading />\n      </MainLayout>\n    )\n  }\n\n  if (error){\n    console.log(id)\n    return (\n      <MainLayout title='Recipe loading'>\n        <Error errorText={`${error}`} />\n      </MainLayout>\n    )\n  }\n  return <p>My Recipe</p>\n}\n\nRecipe.getInitialProps = ({query}) => {\n  const {id} = query;\n\n  return {id};\n}\n\nexport default Recipe"]},"metadata":{},"sourceType":"module"}