{"ast":null,"code":"var _jsxFileName = \"/Users/michaelshokoya/Documents/code/node/recipe-website/src/pages/recipe/[id]/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { recipeGraphQL } from '../../../graphql/queries/recipe';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Loading } from '../../../components/Loading';\nimport { Error } from '../../../components/Error';\nimport { MainLayout } from '../../../components/MainLayout';\nimport { get as $get } from 'lodash';\n\nconst Recipe = ({\n  id\n}) => {\n  const {\n    loading,\n    data,\n    error\n  } = useQuery(recipeGraphQL, {\n    variables: {\n      where: {\n        id\n      }\n    }\n  });\n  const title = $get(data, 'recipe.title');\n\n  if (loading) {\n    return __jsx(MainLayout, {\n      title: \"Recipe loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, __jsx(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (error) {\n    return __jsx(MainLayout, {\n      title: \"Recipe loading error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, __jsx(Error, {\n      errorText: `${error}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (!title) {\n    return __jsx(MainLayout, {\n      title: \"Not a valid recipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, __jsx(Error, {\n      errorText: \"Not a valid recipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return __jsx(MainLayout, {\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, title));\n};\n\nRecipe.getInitialProps = ({\n  query\n}) => {\n  const {\n    id\n  } = query;\n  return {\n    id\n  };\n};\n\nexport default Recipe;","map":{"version":3,"sources":["/Users/michaelshokoya/Documents/code/node/recipe-website/src/pages/recipe/[id]/index.tsx"],"names":["recipeGraphQL","useQuery","Loading","Error","MainLayout","get","$get","Recipe","id","loading","data","error","variables","where","title","getInitialProps","query"],"mappings":";;;AAAA,SAAQA,aAAR,QAA4B,iCAA5B;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAAQC,OAAR,QAAsB,6BAAtB;AACA,SAAQC,KAAR,QAAoB,2BAApB;AACA,SAAQC,UAAR,QAAyB,gCAAzB;AACA,SAAQC,GAAG,IAAIC,IAAf,QAA0B,QAA1B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAwB;AACrC,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,MAAyBV,QAAQ,CAACD,aAAD,EAAgB;AACrDY,IAAAA,SAAS,EAAE;AAACC,MAAAA,KAAK,EAAE;AAACL,QAAAA;AAAD;AAAR;AAD0C,GAAhB,CAAvC;AAGA,QAAMM,KAAK,GAAGR,IAAI,CAACI,IAAD,EAAO,cAAP,CAAlB;;AAEA,MAAID,OAAJ,EAAa;AACX,WACE,MAAC,UAAD;AAAY,MAAA,KAAK,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAED,MAAIE,KAAJ,EAAU;AACR,WACE,MAAC,UAAD;AAAY,MAAA,KAAK,EAAC,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,SAAS,EAAG,GAAEA,KAAM,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAED,MAAI,CAACG,KAAL,EAAY;AACV,WACE,MAAC,UAAD;AAAY,MAAA,KAAK,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,SAAS,EAAC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AACD,SACE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAEA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAJ,CADF,CADF;AAKD,CAlCD;;AAoCAP,MAAM,CAACQ,eAAP,GAAyB,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACpC,QAAM;AAACR,IAAAA;AAAD,MAAOQ,KAAb;AAEA,SAAO;AAACR,IAAAA;AAAD,GAAP;AACD,CAJD;;AAMA,eAAeD,MAAf","sourcesContent":["import {recipeGraphQL} from '../../../graphql/queries/recipe';\nimport {useQuery} from '@apollo/react-hooks';\nimport {Loading} from '../../../components/Loading';\nimport {Error} from '../../../components/Error';\nimport {MainLayout} from '../../../components/MainLayout';\nimport {get as $get} from 'lodash';\n\nconst Recipe = ({id}: {id: string}) => {\n  const {loading, data, error} = useQuery(recipeGraphQL, {\n    variables: {where: {id}}\n  });\n  const title = $get(data, 'recipe.title');\n\n  if (loading) {\n    return (\n      <MainLayout title='Recipe loading'>\n        <Loading />\n      </MainLayout>\n    )\n  }\n\n  if (error){\n    return (\n      <MainLayout title='Recipe loading error'>\n        <Error errorText={`${error}`} />\n      </MainLayout>\n    )\n  }\n\n  if (!title) {\n    return (\n      <MainLayout title='Not a valid recipe'>\n        <Error errorText='Not a valid recipe' />\n      </MainLayout>\n    )\n  }\n  return (\n    <MainLayout title={title}>\n      <p>{title}</p>\n    </MainLayout>\n  )\n}\n\nRecipe.getInitialProps = ({query}) => {\n  const {id} = query;\n\n  return {id};\n}\n\nexport default Recipe"]},"metadata":{},"sourceType":"module"}