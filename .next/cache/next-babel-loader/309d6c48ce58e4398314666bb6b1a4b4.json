{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/michaelshokoya/Documents/code/node/recipe-website/src/components/RecipesList/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport _ from 'lodash';\nimport { useQuery } from '@apollo/react-hooks';\nimport { recipesGraphQL } from '../../graphql/queries/recipies';\nimport { userLikesGraphQL } from '../../graphql/queries/userLikes';\nimport { RecipeListItem } from '../RecipeListItem';\nimport { Row } from 'antd';\nimport { Error } from '../Error';\nimport { Loading } from '../Loading';\nimport { Warning } from '../Warning';\nexport var queryEnum;\n\n(function (queryEnum) {\n  queryEnum[\"userLikes\"] = \"userLikes\";\n  queryEnum[\"recipes\"] = \"recipes\";\n})(queryEnum || (queryEnum = {}));\n\nexport var RecipesList = function RecipesList(_ref) {\n  _s();\n\n  var options = _ref.options,\n      parentRoute = _ref.parentRoute,\n      queryType = _ref.queryType;\n  var query = queryType === queryEnum.recipes ? recipesGraphQL : userLikesGraphQL;\n\n  var _useQuery = useQuery(query, options),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var parentArray = _.get(data, queryType);\n\n  var recipesList = _.map(parentArray, function (value) {\n    return _.get(value, 'recipe', value);\n  });\n\n  if (loading) return __jsx(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  });\n\n  if (recipesList.length === 0) {\n    return __jsx(Warning, {\n      warningHeader: \"No Recipes\",\n      warningText: \"No recipes are present why not add one ?\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (error || !recipesList) return __jsx(Error, {\n    errorText: \"\".concat(error),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 37\n    }\n  });\n  return __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, recipesList.map(function (recipe) {\n    return __jsx(RecipeListItem, {\n      key: \"\".concat(recipe.id, \"-\").concat(queryType),\n      recipe: recipe,\n      parentRoute: parentRoute,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\n_s(RecipesList, \"RsAoF0jGW8x/4pnnopXB/YWtfZ8=\", false, function () {\n  return [useQuery];\n});\n\n_c = RecipesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipesList\");","map":{"version":3,"sources":["/Users/michaelshokoya/Documents/code/node/recipe-website/src/components/RecipesList/index.tsx"],"names":["_","useQuery","recipesGraphQL","userLikesGraphQL","RecipeListItem","Row","Error","Loading","Warning","queryEnum","RecipesList","options","parentRoute","queryType","query","recipes","data","loading","error","parentArray","get","recipesList","map","value","length","recipe","id"],"mappings":";;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SAA0BC,QAA1B,QAAyC,qBAAzC;AACA,SAAQC,cAAR,QAA6B,gCAA7B;AACA,SAAQC,gBAAR,QAA+B,iCAA/B;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,SAAQC,GAAR,QAAkB,MAAlB;AAEA,SAAQC,KAAR,QAAoB,UAApB;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,YAAtB;AAGA,WAAYC,SAAZ;;WAAYA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;GAAAA,S,KAAAA,S;;AAWZ,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAIH;AAAA;;AAAA,MAHtBC,OAGsB,QAHtBA,OAGsB;AAAA,MAFtBC,WAEsB,QAFtBA,WAEsB;AAAA,MADtBC,SACsB,QADtBA,SACsB;AACtB,MAAMC,KAAK,GACTD,SAAS,KAAKJ,SAAS,CAACM,OAAxB,GACIb,cADJ,GAEIC,gBAHN;;AADsB,kBAMSF,QAAQ,CAACa,KAAD,EAAQH,OAAR,CANjB;AAAA,MAMfK,IANe,aAMfA,IANe;AAAA,MAMTC,OANS,aAMTA,OANS;AAAA,MAMAC,KANA,aAMAA,KANA;;AAQtB,MAAMC,WAAW,GAAGnB,CAAC,CAACoB,GAAF,CAAMJ,IAAN,EAAYH,SAAZ,CAApB;;AACA,MAAMQ,WAAW,GAAGrB,CAAC,CAACsB,GAAF,CAAMH,WAAN,EAAmB,UAAAI,KAAK;AAAA,WAAIvB,CAAC,CAACoB,GAAF,CAAMG,KAAN,EAAa,QAAb,EAAuBA,KAAvB,CAAJ;AAAA,GAAxB,CAApB;;AAEA,MAAIN,OAAJ,EAAa,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;;AACb,MAAII,WAAW,CAACG,MAAZ,KAAuB,CAA3B,EAA+B;AAC7B,WAAO,MAAC,OAAD;AACL,MAAA,aAAa,EAAC,YADT;AAEL,MAAA,WAAW,EAAC,0CAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAID;;AACD,MAAIN,KAAK,IAAI,CAACG,WAAd,EAA2B,OAAO,MAAC,KAAD;AAAO,IAAA,SAAS,YAAKH,KAAL,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAI3B,SACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,WAAW,CAACC,GAAZ,CAAgB,UAACG,MAAD;AAAA,WACf,MAAC,cAAD;AACE,MAAA,GAAG,YAAKA,MAAM,CAACC,EAAZ,cAAkBb,SAAlB,CADL;AAEE,MAAA,MAAM,EAAEY,MAFV;AAGE,MAAA,WAAW,EAAEb,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe;AAAA,GAAhB,CADH,CADF;AAWD,CArCM;;GAAMF,W;UAUoBT,Q;;;KAVpBS,W","sourcesContent":["import _ from 'lodash';\nimport {QueryHookOptions, useQuery} from '@apollo/react-hooks';\nimport {recipesGraphQL} from '../../graphql/queries/recipies';\nimport {userLikesGraphQL} from '../../graphql/queries/userLikes';\nimport {RecipeListItem} from '../RecipeListItem';\nimport {Row} from 'antd';\nimport {Recipe} from '../../../generated/apollo-components';\nimport {Error} from '../Error';\nimport {Loading} from '../Loading';\nimport {Warning} from '../Warning';\n\n\nexport enum queryEnum {\n  userLikes = 'userLikes',\n  recipes = 'recipes'\n}\n\ntype RecipesListProps = {\n  options?: QueryHookOptions;\n  parentRoute: string;\n  queryType: queryEnum;\n}\n\nexport const RecipesList = ({\n  options,\n  parentRoute,\n  queryType\n}: RecipesListProps) => {\n  const query = \n    queryType === queryEnum.recipes \n      ? recipesGraphQL \n      : userLikesGraphQL;\n\n  const {data, loading, error} = useQuery(query, options);\n\n  const parentArray = _.get(data, queryType);\n  const recipesList = _.map(parentArray, value => _.get(value, 'recipe', value));\n\n  if (loading) return <Loading />\n  if (recipesList.length === 0 ) {\n    return <Warning \n      warningHeader='No Recipes' \n      warningText='No recipes are present why not add one ?' \n    />\n  }\n  if (error || !recipesList) return <Error errorText={`${error}`}/>\n\n\n\n  return (\n    <Row>\n      {recipesList.map((recipe: Recipe) => (\n        <RecipeListItem \n          key={`${recipe.id}-${queryType}`} \n          recipe={recipe} \n          parentRoute={parentRoute}\n        />\n      ))}\n    </Row>\n  )\n}"]},"metadata":{},"sourceType":"module"}