{"ast":null,"code":"var _jsxFileName = \"/Users/michaelshokoya/Documents/code/node/recipe-website/src/components/OneRecipe/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, List } from 'antd';\nimport GraphImg from 'graphcms-image';\nimport styled from 'styled-components';\nimport { get as $get } from 'lodash';\nimport { generateUnit } from '../../utils/generateUnit';\nimport { GenerateContent } from '../GenerateContent';\nconst StyledOneRecipe = styled(Col).withConfig({\n  displayName: \"OneRecipe__StyledOneRecipe\",\n  componentId: \"fx35h7-0\"\n})([\"\"]);\nexport const OneRecipe = ({\n  recipe\n}) => {\n  const ingredients = $get(recipe, 'ingredients');\n  return __jsx(StyledOneRecipe, {\n    sm: {\n      span: 20,\n      offset: 2\n    },\n    md: {\n      span: 16,\n      offset: 4\n    },\n    lg: {\n      span: 12,\n      offset: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(GraphImg, {\n    image: recipe.images,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    span: 20,\n    offset: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, recipe.title), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, recipe.description))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    span: 12,\n    offset: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(List, {\n    header: __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, \"Ingredients:\"),\n    bordered: true,\n    dataSource: ingredients || [{\n      type: 'None added',\n      amount: 0,\n      unit: ''\n    }],\n    renderItem: ({\n      amount,\n      unit,\n      type\n    }) => __jsx(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, ingredients ? `${amount} ${generateUnit(unit, amount)} ${type}` : `${type}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    span: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Directions:\"), __jsx(GenerateContent, {\n    textString: recipe.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/michaelshokoya/Documents/code/node/recipe-website/src/components/OneRecipe/index.tsx"],"names":["Row","Col","List","GraphImg","styled","get","$get","generateUnit","GenerateContent","StyledOneRecipe","OneRecipe","recipe","ingredients","span","offset","images","title","description","type","amount","unit","content"],"mappings":"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","sourcesContent":["import {Recipe} from '../../../generated/apollo-components';\nimport {Row, Col, List} from 'antd';\nimport GraphImg from 'graphcms-image';\nimport styled from 'styled-components';\nimport {get as $get} from 'lodash';\nimport {generateUnit} from '../../utils/generateUnit';\nimport {GenerateContent} from '../GenerateContent';\n\nconst StyledOneRecipe = styled(Col)``;\n\nexport const OneRecipe = ({recipe}: {recipe:Recipe}) => {\n  const ingredients = $get(recipe, 'ingredients');\n  return (\n    <StyledOneRecipe\n      sm={{span: 20, offset: 2}}\n      md={{span: 16, offset: 4}}\n      lg={{span: 12, offset: 6}}\n    >\n      <Row>\n        <Col span={24}>\n          <GraphImg image={recipe.images}/>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={20} offset={2}>\n          <h1>{recipe.title}</h1>\n          <p>{recipe.description}</p>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={12} offset={6}>\n          <List\n            header={<h3>Ingredients:</h3>}\n            bordered\n            dataSource={\n              ingredients \n              || [{type: 'None added', amount: 0, unit: ''} ]}\n            renderItem={({amount, unit, type}) => (\n              <List.Item>\n                {ingredients ? `${amount} ${generateUnit(unit, amount)} ${type}`: `${type}`}\n              </List.Item>\n            )}\n          /> \n        </Col>\n      </Row>\n      <Row>\n        <Col span={20}>\n          <h2>Directions:</h2>\n          <GenerateContent textString={recipe.content} />\n        </Col>\n      </Row>\n    </StyledOneRecipe>\n  )\n}"]},"metadata":{},"sourceType":"module"}